{"version":3,"sources":["webpack:///./src/pages/updates.js"],"names":["query","UpdatesPage","data","title","allMarkdownRemark","edges","filter","edge","node","frontmatter","type","map","key","id","className","date","dangerouslySetInnerHTML","__html","html"],"mappings":"0FAAA,mFAMaA,EAAK,aAuCHC,UArBK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,YACVD,EAAKE,kBAAkBC,MACrBC,QAAO,SAAAC,GAAI,MAAmC,WAA/BA,EAAKC,KAAKC,YAAYC,QACrCC,KAAI,SAAAJ,GAAI,OACP,6BAASK,IAAKL,EAAKC,KAAKK,GAAIC,UAAU,UACpC,oCACSP,EAAKC,KAAKC,YAAYM,KAC7B,6BAFF,UAGUR,EAAKC,KAAKC,YAAYN,OAEhC,yBAAKa,wBAAyB,CAAEC,OAAQV,EAAKC,KAAKU,QAClD","file":"component---src-pages-updates-js-74980d4d1fc223f274cf.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport const query = graphql`\n  query UpdatesPageQuery {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          html\n          id\n          frontmatter {\n            date(formatString: \"MM/DD/YYYY\")\n            title\n            type\n          }\n        }\n      }\n    }\n  }\n`\n\nconst UpdatesPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Updates\" />\n      {data.allMarkdownRemark.edges\n        .filter(edge => edge.node.frontmatter.type === \"update\")\n        .map(edge => (\n          <article key={edge.node.id} className=\"update\">\n            <p>\n              date: {edge.node.frontmatter.date}\n              <br />\n              title: {edge.node.frontmatter.title}\n            </p>\n            <div dangerouslySetInnerHTML={{ __html: edge.node.html }} />\n            <hr />\n          </article>\n        ))}\n    </Layout>\n  )\n}\n\nexport default UpdatesPage\n"],"sourceRoot":""}